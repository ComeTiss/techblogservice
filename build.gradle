plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.diffplug.gradle.spotless' version '3.26.0'
}

group = 'com.techblog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

spotless {
	java {
		importOrder 'java', 'javax', 'org', 'com', 'com.diffplug', ''
		removeUnusedImports()
		googleJavaFormat('1.4') // see: https://google.github.io/styleguide/javaguide.html#
	}
	format 'gradle', {
		target '**/*.gradle'
		replaceRegex 'blank lines following {', '\\{\\n\\s*\\n+', '{\n'
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	compile 'com.graphql-java-kickstart:graphql-spring-boot-starter-test:6.0.0'
	compile 'com.graphql-java-kickstart:graphql-java-tools:6.0.0'
	compile "org.springframework.boot:spring-boot-starter-security"
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation('io.jsonwebtoken:jjwt:0.2')
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	runtime("com.h2database:h2:1.3.176")
}

test {
	useJUnitPlatform()
}
